set -g default-terminal "tmux-256color"
set -g terminal-overrides ",xterm-256color:RGB"

set -g prefix C-a
unbind C-b
bind-key C-a send-prefix

unbind %
bind | split-window -h

unbind '"'
bind - split-window -v

unbind r
bind r source-file ~/.tmux.conf

bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5

bind -r m resize-pane -Z

bind-key t run-shell ' \
    pane_id=$(tmux display-message -p "#{pane_id}" | sed "s/^[[:space:]]*//;s/[[:space:]]*$//");                  \
    pane_count=$(tmux list-panes | wc -l);                            \
    if [ "$pane_count" -eq 1 ]; then                                    \
        tmux split-window -v -l 25 -f;                                \
    else                                                              \
        pane_bottom=$(tmux list-panes -F "#{pane_id}:#{pane_at_bottom}" | grep -E ":1$" | cut -d: -f1);                      \
        if [[ $pane_id == $pane_bottom ]]; then                      \
            echo "debug - pane_id: $pane_id"; \
            echo "debug - pane_bottom: $pane_bottom"; \
            tmux resize-pane -Z;                                      \
            tmux select-pane -U;                                      \
        else                                                          \
            is_zoomed=$(tmux list-panes -F "#{pane_id}:#{pane_zoomed}" | grep "^$pane_bottom" | cut -d: -f2);         \
            echo "debug - is_zoomed: $is_zoomed"; \
            if [ "$is_zoomed" = "1" ]; then                           \
                tmux resize-pane -Z -t "$pane_bottom";                \
                tmux select-pane -t "$pane_bottom";                   \
            else                                                      \
                tmux select-pane -t "$pane_bottom";                   \
            fi;                                                       \
        fi; \
    fi;                                                              \
'

set -g mouse on
set -g base-index 1
set -g detach-on-destroy off
set -g escape-time 0
set -g history-limit 1000000
set -g renumber-windows on
set -g set-clipboard on
set -g status-position top
setw -g mode-keys vi
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
set -g status-bg "#000000"

set -g @fzf-url-fzf-options '-p 60%,30% --prompt="   " --border-label=" Open URL "'
set -g @fzf-url-history-limit '2000'

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# list of plugins
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'tmux-plugins/tmux-sensible'
# set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'omerxx/tmux-sessionx'
set -g @plugin 'catppuccin/tmux'

set -g @floax-width '80%'
set -g @floax-height '80%'
set -g @floax-border-color 'magenta'
set -g @floax-text-color 'blue'
set -g @floax-bind 'p'
set -g @floax-change-path 'true'
set -g @sessionx-bind-zo-new-window 'ctrl-y'
set -g @sessionx-auto-accept 'off'
set -g @sessionx-bind 'o'
set -g @sessionx-tree-mode 'on'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '75%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-custom-paths-subdirectories 'false'
set -g @sessionx-filter-current 'false'
set -g @continuum-restore 'on'
set -g @resurrect-strategy-nvim 'session'
set -g @catppuccin_window_status_style "rounded"
set -g @catppuccin_status_background "default"

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#     "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
#
# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l

# set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator " "
# set -g @catppuccin_window_middle_separator " █"
# set -g @catppuccin_window_default_fill "number"
# set -g @catppuccin_window_default_text "#W"
# set -g @catppuccin_window_current_fill "number"
# set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
# set -g @catppuccin_status_modules_right "directory"
# set -g @catppuccin_status_modules_left "window"
# set -g @catppuccin_status_left_separator  " "
# set -g @catppuccin_status_right_separator " "
# set -g @catppuccin_status_right_separator_inverse "no"
# set -g @catppuccin_status_fill "icon"
# set -g @catppuccin_status_connect_separator "no"
# set -g @catppuccin_directory_text "#{b:pane_current_path}"

run '~/.tmux/plugins/tpm/tpm'
run '~/.tmux/plugins/catppuccin/tmux/catppuccin.tmux'

set -g @catppuccin_window_default_text "#{window_name}"
set -g @catppuccin_window_text " #{window_name}"
set -g @catppuccin_window_current_text " #{window_name}"
set -g status-right-length 100
set -g status-left-length 100
set -g status-left ""
set -g status-right ""
set -ag status-right "#{E:@catppuccin_status_session}"
set -ag status-right "#{E:@catppuccin_status_application}"
set -ag status-right "#{E:@catppuccin_status_directory}"
